stages :
#  - test
  - build

#test-project-linux-x86_64:
#  tags:
#    - "linux"
#  stage: test
#  before_script:
#    - apt-get update && apt-get install -y --no-install-recommends make cmake g++
#    - mkdir -p $HOME/.local
#    - curl -s "https://cmake.org/files/v3.26/cmake-3.26.0-linux-x86_64.tar.gz" | tar --strip-components=1 -xz -C $HOME/.local
#    - export PATH=$HOME/.local/bin:$PATH
#  script:
#    - mkdir -p build_tests
#    - cd build_tests
#    - cmake ../tests && cmake --build . && make
#    - ./TMSE_tests --gtest_output="xml:report.xml"
#  when: always
#  artifacts:
#    reports:
#      junit: build_tests/report.xml

#build-project-linux-x86_64:
#  tags:
#    - "linux"
#  stage: build
#  before_script:
#    - apt-get update && apt-get install -y --no-install-recommends make cmake g++
#    - mkdir -p $HOME/.local
#    - curl -s "https://cmake.org/files/v3.26/cmake-3.26.0-linux-x86_64.tar.gz" | tar --strip-components=1 -xz -C $HOME/.local
#    - export PATH=$HOME/.local/bin:$PATH
#  script:
#    - mkdir build
#    - cd build
#    - cmake .. && cmake --build . && make
#  artifacts:
#    paths:
#      - build/TMSE


# build-win64:
#   tags:
#     - "windows"
#   stage: build
#   script:
#     - echo $RT_VERSION
#     - mkdir build 
#     - cd build
#     - cmake ../ -G "Visual Studio 16 2019" -DRELEASE_VERSION="$RT_VERSION" -DCMAKE_BUILD_TYPE=Release
#     - cmake --build . --config Release --target package
#   artifacts:
#     name: "raytracing-$RT_VERSION.zip"
#     paths:
#       - build/raytracing-$RT_VERSION-win64.7z
#     expire_in: 24 hours

build-win64:
  tags:
    - "windows"
  stage: build
  script:
    - mkdir build 
    - cd build
    - cmake ../ -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release
    - cmake --build . --config Release --target TMSE
  artifacts:
    paths:
      - build/TMSE.exe